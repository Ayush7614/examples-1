{
  "label": "Cpu2wiotp for arm64",
  "description": "Sample Horizon workload that repeatedly reads the CPU load and sends it to WIoTP",
  "public": true,
  "workloadUrl": "https://internetofthings.ibmcloud.com/workloads/cpu2wiotp",
  "version": "1.2.0",
  "arch": "arm64",
  "apiSpec": [
    {
      "specRef": "https://internetofthings.ibmcloud.com/microservices/cpu",
      "org": "$HZN_ORG_ID",
      "version": "[0.0.0,INFINITY)",
      "arch": "arm64"
    },
    {
      "specRef": "https://internetofthings.ibmcloud.com/wiotp-edge/microservices/edge-core-iot-microservice",
      "org": "IBM",
      "version": "[1.0.11,INFINITY)",
      "arch": "arm64"
    }
  ],
  "userInput": [
    {
      "name": "WIOTP_DEVICE_AUTH_TOKEN",
      "label": "The token you gave to the device or gateway you created in the WIoTP UI",
      "type": "string"
    },
    {
        "name": "SAMPLE_SIZE",
        "label": "the number of samples to read before calculating the average",
        "type": "int",
        "defaultValue": "10"
    },
    {
        "name": "SAMPLE_INTERVAL",
        "label": "the number of seconds between samples",
        "type": "int",
        "defaultValue": "5"
    },
    {
        "name": "MOCK",
        "label": "mock the CPU sampling",
        "type": "boolean",
        "defaultValue": "false"
    },
    {
        "name": "PUBLISH",
        "label": "publish the CPU samples to WIoTP",
        "type": "boolean",
        "defaultValue": "true"
    },
    {
        "name": "VERBOSE",
        "label": "log everything that happens",
        "type": "string",
        "defaultValue": "0"
    }
  ],
  "workloads": [
    {
      "deployment": "{\"services\":{\"cpu2wiotp\":{\"image\":\"openhorizon/example_wl_arm64_cpu2wiotp:1.2.0\",\"privileged\":false,\"environment\":[\"WIOTP_DOMAIN=internetofthings.ibmcloud.com\",\"WIOTP_EDGE_MQTT_IP=edge-connector\",\"WIOTP_PEM_FILE=/var/wiotp-edge/persist/dc/ca/ca.pem\"],\"binds\":[\"/var/wiotp-edge:/var/wiotp-edge\"]}}}",
      "deployment_signature": "Up79haJn7Mz6cs7JrycKp2jeTmhgp349a+p2RF2AviQ1ajeS4lbQcqM841GedtstQ0OGGvSMYu/taDXTlYmO2fmxqARHeEW6JIraYLOVOPan8OCQvGKqwwbhKN5PXdjDfYGxIDYGi54sGcvuEB07PYFI/F3r1ewsLBJ/72Zx+XZeP439mvd5VAcoYWPPF13rD392FYhpk0pRo/vstH+sxuBi/q6m40OspceKju+ZT23XWRNdVMQKn2qSo62Sn/eVUsBBhgFce0hxx3QV2xG4C3e+562ttD23UGlAxgGU0rNiUzHAeiEaRY821etbeTXaOZUYuIdMGPZ7ZX05RlsuaOxJJsNxePUZA+8a1RTTFAYS3I/DjeI6tmAjdzkVrps4CvsoqLof7CUwWMLG0KmDnervYlwmReTd7MbXoq79/B7H/9Yhyf4I55TJVEPvxDkryExajA4XC/a8Ow2dzzQk+cd4b7W9wDnpNRnCd+4qEGbuPhuMVAwv/tb3mDnAGg2ZoxsWuO6GdN1gM5xt0l8DwUhQqq76atsycLGIci9WUrBjZiRavVx6T1Vv3z8e4/5WLv47nB5QKNbVXATEXfI2/EAmhcFkpg2aDEmfCFEoU8AjnUhZEvBxdDA5MqLGvwmjcZ9obE4qQCjQtK3Uy/xeyATT7bkR8IT3/QUmg+GZcaw=",
      "torrent": "{\"url\":\"\",\"signature\":\"\"}"
    }
  ]
}
