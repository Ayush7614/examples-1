{
  "label": "Cpu2wiotp for amd64",
  "description": "Sample Horizon workload that repeatedly reads the CPU load and sends it to WIoTP",
  "public": true,
  "workloadUrl": "https://internetofthings.ibmcloud.com/workloads/cpu2wiotp",
  "version": "1.2.1",
  "arch": "amd64",
  "apiSpec": [
    {
      "specRef": "https://internetofthings.ibmcloud.com/microservices/cpu",
      "org": "$HZN_ORG_ID",
      "version": "[0.0.0,INFINITY)",
      "arch": "amd64"
    },
    {
      "specRef": "https://internetofthings.ibmcloud.com/wiotp-edge/microservices/edge-core-iot-microservice",
      "org": "IBM",
      "version": "[1.0.11,INFINITY)",
      "arch": "amd64"
    }
  ],
  "userInput": [
    {
      "name": "WIOTP_DEVICE_AUTH_TOKEN",
      "label": "The token you gave to the device or gateway you created in the WIoTP UI",
      "type": "string"
    },
    {
        "name": "SAMPLE_SIZE",
        "label": "the number of samples to read before calculating the average",
        "type": "int",
        "defaultValue": "6"
    },
    {
        "name": "SAMPLE_INTERVAL",
        "label": "the number of seconds between samples",
        "type": "int",
        "defaultValue": "5"
    },
    {
        "name": "MOCK",
        "label": "mock the CPU sampling",
        "type": "boolean",
        "defaultValue": "false"
    },
    {
        "name": "PUBLISH",
        "label": "publish the CPU samples to WIoTP",
        "type": "boolean",
        "defaultValue": "true"
    },
    {
        "name": "VERBOSE",
        "label": "log everything that happens",
        "type": "string",
        "defaultValue": "0"
    }
  ],
  "workloads": [
    {
      "deployment": "{\"services\":{\"cpu2wiotp\":{\"image\":\"openhorizon/example_wl_amd64_cpu2wiotp:1.2.1\",\"privileged\":false,\"environment\":[\"WIOTP_DOMAIN=internetofthings.ibmcloud.com\",\"WIOTP_EDGE_MQTT_IP=edge-connector\",\"WIOTP_PEM_FILE=/var/wiotp-edge/persist/dc/ca/ca.pem\"],\"binds\":[\"/var/wiotp-edge:/var/wiotp-edge\"]}}}",
      "deployment_signature": "rSK9Hf6LjJgIRvtbyJo0zMaqBDAqSUcpqt+QVOnsdLNJ3qXG8hL4BwxViDkRZu6IFJh/m/dZBdjD3QA+7Lz63jlFf2iIXhwKKQKpKiHCCpSDqGRCg0MrA3PAdMNRC1EiGXdjGDDX+WU5LAyLNottsTsRIDiQ0jTGvJ3DaNiek6oHCpROpHRg/4iSu8QqPnCA0T4gxiBeJWL14WKm/Xn5QLqxNhnENgJMNP8QL4hjPWE5x/9yAo60zLUKMo6O2JVviH8dyAKgaHenrBfrJZittD1QYuANtVF6bD2MhTpkE3qqKMRU5ZIqXw1wKF4EYHZpE+DZOX+kIt8Gcwh5gkRShQ3s0NOP1OypH5Q2FXOXJsZwuBweYBydGHbC9wWtfSYmTOxpujNJQvkoXyV/hpgpHXH/2AW4IyIStN8PjZ2xLeTi3tz3n0pFCqTscGxSYkDLnvJ5qGupmgUGFIkXGia8cdnN/rJT9YoZ2Vk5vEWSUxXIE1JpbGeYcgbEEduXyDLpR7JEa6WhNIzt2dkT98lwPmkUmvuxG+rhLCyGVimAwt2vcOfyOKZ7khruTKfgN5skuQeNsI9Oiv94QEZizJjC9kBo8DaddnkoZOGddOaQaEuOWb4AD983gBYHdBmqRsNKr7kiFHKDYgQBRXfxEbPDxCbDZ85lqTvSnvEpnjkpZ+U=",
      "torrent": "{\"url\":\"\",\"signature\":\"\"}"
    }
  ]
}
