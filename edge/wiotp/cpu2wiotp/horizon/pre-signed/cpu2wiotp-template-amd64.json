{
  "label": "Cpu2wiotp for amd64",
  "description": "Sample Horizon workload that repeatedly reads the CPU load and sends it to WIoTP",
  "public": true,
  "workloadUrl": "https://internetofthings.ibmcloud.com/workloads/cpu2wiotp",
  "version": "1.2.0",
  "arch": "amd64",
  "apiSpec": [
    {
      "specRef": "https://internetofthings.ibmcloud.com/microservices/cpu",
      "org": "$HZN_ORG_ID",
      "version": "[0.0.0,INFINITY)",
      "arch": "amd64"
    },
    {
      "specRef": "https://internetofthings.ibmcloud.com/wiotp-edge/microservices/edge-core-iot-microservice",
      "org": "IBM",
      "version": "[1.0.11,INFINITY)",
      "arch": "amd64"
    }
  ],
  "userInput": [
    {
      "name": "WIOTP_DEVICE_AUTH_TOKEN",
      "label": "The token you gave to the device or gateway you created in the WIoTP UI",
      "type": "string"
    },
    {
        "name": "SAMPLE_SIZE",
        "label": "the number of samples to read before calculating the average",
        "type": "int",
        "defaultValue": "6"
    },
    {
        "name": "SAMPLE_INTERVAL",
        "label": "the number of seconds between samples",
        "type": "int",
        "defaultValue": "5"
    },
    {
        "name": "MOCK",
        "label": "mock the CPU sampling",
        "type": "boolean",
        "defaultValue": "false"
    },
    {
        "name": "PUBLISH",
        "label": "publish the CPU samples to WIoTP",
        "type": "boolean",
        "defaultValue": "true"
    },
    {
        "name": "VERBOSE",
        "label": "log everything that happens",
        "type": "string",
        "defaultValue": "0"
    }
  ],
  "workloads": [
    {
      "deployment": "{\"services\":{\"cpu2wiotp\":{\"image\":\"openhorizon/example_wl_amd64_cpu2wiotp:1.2.0\",\"privileged\":false,\"environment\":[\"WIOTP_DOMAIN=internetofthings.ibmcloud.com\",\"WIOTP_EDGE_MQTT_IP=edge-connector\",\"WIOTP_PEM_FILE=/var/wiotp-edge/persist/dc/ca/ca.pem\"],\"binds\":[\"/var/wiotp-edge:/var/wiotp-edge\"]}}}",
      "deployment_signature": "utfweuUIJQpZ2nWO92GTjxTaW+yA95i4sDOizR/zf/9z7KAZhJnWu9XwlD6wtb5CCqVIU0EwB2H1K3dQ+EbOCF/vG3NyUqe6Yh0pft19P7q5JfsbmcqX/91aqAjAnhvF5awWcGMWYya7E9OLa4rcXw8XAz/R9QG6ELn9m0leyHZAEwxszCUL/F0oT/IZYh1jg39po+5nLgsXwzoTBUBPSwgAe1fvKdha1WK/Xlf2b4zTND67C7TbiBaJqqsmyyBsnURpjiHDR5APniqOwDCclaIuBWVdaEZOQtJGocYyJjLtjUEKVMnRA3HDKSyrLG4lISBYG9B2RkCBWBjfab3NEySM3rh+WlsOqwBcmeUIAq7VeA/Q4hikOz8MuE8UsgKEJJSYbllmeUJRUGOLTTQ60l449g24eoLATMYR44S8dHYYyj5NIwtiMgE1+n+Gqmx9koyON1pfvPKpaULu8bc6poxfjDvnxd20XlnDBBlSJYw5clLhD4On06fpNUs/3jXjdVq3jKfPPcppYTjXyOol6+SgzfkGeLWholf40EFllNrDON/9sTBxjMuJWrGNcJcepq4HVdZ5Ayi7CEi+l2/gfNRwImJLLYqWxEQklGqUwItIO0ip1VJf/jyUPOsgnf6NpE9r4XV7+JTxsO+9z0duOGJ9yUb49kwhGQjgyCTPxR0=",
      "torrent": "{\"url\":\"\",\"signature\":\"\"}"
    }
  ]
}
