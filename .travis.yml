sudo: true
services: docker

#todo: add in go support when we start testing the gps sample
#language: go
#go: 1.10.x
language: minimal

#notifications:
#  slack:
#    secure: vSzVllY4Vmt6Nf6Yl+5QDMKTEQ4jIbP/bC/LSzZFmQNlYWlDEzG1gQcPb4prh7/efjUFt+vM2lTFP7jLEkib+XiR8n4LShCl+IeRyBpiONXII4KN7O9IPTMMOpGvN/FhZFgyzRFwEvkCSuSBpOYoRGGij/wzo/mPzfJYEyGxpaRmQKEmD7xmtxXMAVWpK2L5fL6XbglEPKD7pMYUvM/WyzAMJg4JgDxOGeX7QLGdSQrTOOkUtJjiEs8WtB/fR9Gev+vwX22KrnMwZpmT9KPPi+kzwFYnfzKxHdjdsmydmBBlBS4XM8rvJL1eMyrQB2LOOW8xWUeOF03t5PfKAC6cY2h01Jdl/rx3L6Pc99ABItS3OvYcwL0HY20bz+hNI0seRMVftz7eRzMHGdQsfYXfU6hOxkovGutRoyVkS7f+m66nBaOfRh6DAlOt/H6us4WEq1zJb8SyP+S7Xm38grh+xEDIMaz8AeavhDRWyH6RQfrpxvcGbcWhURXiY7clJLgjmauGJw9H/jxkuuoIINIFjkrziRHDGj9ZxNp3JbtJfprrramMCLtHl5Ziz5Pjmcf46iZxFzNlRlW/aC5ZqQbHm5EgcNuHXHMHvzTQcnkFDrQBGaXI3sLXfaYt+1LeRwfQXGOsWSgc8lmgfcGn1Fvbj/8ykq/q1ReQFAbCvT62ZR8=

- secure: "ya0YFjEhDG2ibhrSNt6OffweJUrCxSPJIJogtt5JU0lbOHIsuuK5eZcqHFCNjPMlFL+WFTl8+TyA8o9FFl/B2cEekKqlfKHcBDclDvniRmOmzt/H3jsScjTzmbnAASIatZ/+gFc+EAgVwL4dCnlUX/j2KnbVY7pD2lza35Vb0xganNLkBXOZC698R9Fb6cj5j0MlrEpNlBmGGBTJcR/ZaNjsdP1VmgyCISEGcyhT5qjcSTi/CiLuoMdn9RmBwfc6wrNylo6AS6/108hK4tnzSesEPHABHCRmMz+excuQeGRlslSOPe8jQPqDLjvXqFWxkh7fwTprLyZ1FJgBvIgEpSpPUfRYZ8D2CpF/EZq1D1o+6spD5UN1FV+tzMsHuhkRDXl7tGknGAwtcpCe09KYed/VNll9GEpniOhVwtx0HhXpCplGN9cM/M53IIeR137axU6t+/bpRcyV7KZ5SHJF537boFdBVdt8oHgbgYA8ANnQWmHLuxz1hI0TaiI+PiVB3dNB4TJmevrYjA60LmTcpWENvo7LGcz9wNKcEjme0mUUKwPAGkSoGQCM+qkQLEjJJV3K7e3jcSoLtFSmZwYBLTlKCNKEVRKGgB2bYamzAAi1ctZxUMKhGhdkKOtJKDenpSmW4Px5unEjBTiEqtwDSM2ZI4GlDcYHMj3k2br4UhM="

#os:
#  - osx
dist: xenial

branches:
  only:
  - master

#todo: for multi-arch builds see: http://wiki.micromint.com/index.php/Debian_ARM_Cross-compile , https://wiki.debian.org/QemuUserEmulation , https://dev.to/zeerorg/build-multi-arch-docker-images-on-travis-5428
#  We can not use osx so because the docs currently state: "We do not currently support use of Docker on macOS"
#addons:
#  apt:
#    update: true
#    packages:
#    - qemu
#    - qemu-user-static
#    - binfmt-support
#    - dpkg-cross

# Publish to staging if successful (promotion to prod is a separate process)
env:
  - ARCH=amd64 HZN_EXCHANGE_URL=https://stg.edge-fabric.com/v1

# Install the hzn command
#todo: change this to:
#addons:
#  apt:
#    update: true
#    sources:
#    - sourceline: deb [arch=amd64,armhf,arm64,ppc64el] http://pkg.bluehorizon.network/linux/ubuntu xenial-updates main
#      key_url: 'http://pkg.bluehorizon.network/bluehorizon.network-public.key'
#    packages:
#    - horizon-cli
before_script:
  - wget -qO - http://pkg.bluehorizon.network/bluehorizon.network-public.key | sudo apt-key add -
  - echo "deb [arch=$(dpkg --print-architecture)] http://pkg.bluehorizon.network/linux/ubuntu xenial-testing main" | sudo tee -a /etc/apt/sources.list
  - sudo apt-get update -q
  - sudo apt-get install horizon-cli -y

# Build and test the example
# Note: tools/travis-find determines if the specified service was modified, so we know if we should test it.
script:
  - services=( edge/services/helloworld edge/services/cpu edge/services/gps edge/services/helloMMS edge/evtstreams/cpu2evtstreams edge/evtstreams/sdr2evtstreams )
  - |
    for service in "${services[@]}"; do
      if git diff --name-only $TRAVIS_COMMIT_RANGE | $TRAVIS_BUILD_DIR/tools/travis-find $service -v; then
        cd $TRAVIS_BUILD_DIR/$service && make test;
      fi
    done
  - cd $TRAVIS_BUILD_DIR

after_script: 
  - echo "Shhh... it's a secret!"
  - echo "$TEST_SECRET"

# If this is after the PR has been merged into master, and the test was successful, then publish the example
#todo: publishing the service from travis is a problem, because we need the docker creds, horizon creds, and service private key. Even tho they are encrypted, the travis organization still has access to them.
#after_success:
#  - 'if [[ "$TRAVIS_PULL_REQUEST" == "false" ]] && git diff --name-only $TRAVIS_COMMIT_RANGE | $TRAVIS_BUILD_DIR/tools/travis-find edge/services/helloworld -v; then
#    echo "Publishing helloworld..." &&
#    echo "$DOCKER_HUB_PASS" | docker login -u "$DOCKER_HUB_USER" --password-stdin &&
#    cd $TRAVIS_BUILD_DIR/edge/services/helloworld && make publish-service;
#    fi'
