sudo: true
services: docker

#todo: add in go support when we start testing the gps sample
#language: go
#go: 1.10.x
language: minimal

#notifications:
#  slack:
#    secure: vSzVllY4Vmt6Nf6Yl+5QDMKTEQ4jIbP/bC/LSzZFmQNlYWlDEzG1gQcPb4prh7/efjUFt+vM2lTFP7jLEkib+XiR8n4LShCl+IeRyBpiONXII4KN7O9IPTMMOpGvN/FhZFgyzRFwEvkCSuSBpOYoRGGij/wzo/mPzfJYEyGxpaRmQKEmD7xmtxXMAVWpK2L5fL6XbglEPKD7pMYUvM/WyzAMJg4JgDxOGeX7QLGdSQrTOOkUtJjiEs8WtB/fR9Gev+vwX22KrnMwZpmT9KPPi+kzwFYnfzKxHdjdsmydmBBlBS4XM8rvJL1eMyrQB2LOOW8xWUeOF03t5PfKAC6cY2h01Jdl/rx3L6Pc99ABItS3OvYcwL0HY20bz+hNI0seRMVftz7eRzMHGdQsfYXfU6hOxkovGutRoyVkS7f+m66nBaOfRh6DAlOt/H6us4WEq1zJb8SyP+S7Xm38grh+xEDIMaz8AeavhDRWyH6RQfrpxvcGbcWhURXiY7clJLgjmauGJw9H/jxkuuoIINIFjkrziRHDGj9ZxNp3JbtJfprrramMCLtHl5Ziz5Pjmcf46iZxFzNlRlW/aC5ZqQbHm5EgcNuHXHMHvzTQcnkFDrQBGaXI3sLXfaYt+1LeRwfQXGOsWSgc8lmgfcGn1Fvbj/8ykq/q1ReQFAbCvT62ZR8=

env: 
  global:
    - secure: "GgoQird+Ba65ZilBPAI3QLEB/GCSMaJOfip4aWLp24cC4AGAeYHn7aezlBGSOsAODnjwciGqxVcw76J7M3sBXt07SurXB/TMnUDEwZl0gaxnJgE4CjS50e7uPASK3h2mwHwUyq1xkPHGDJtCq2CcDCcpRs8GSJgEqp7lK/yxrst+/9hQgJrSbldnS/evl1RQ68l8wx965z/K2Li94kfNXT4DEwUHPXHVLarbsSu2+DzqonQPKrkrCquBaH+SPnQ4wmDdsYDy2qHYRHlyY9lTjVZ/9zLnVzEZP5ONvvRoyPZv85ikFxzpm+SWWqlu/N4I8P/rDnmyOuQDHFVKVoE6X88bvzWcKikQQaQIqn9ybTH1nvpGLFRoI9EDCLtUFgbipoRG3T02P1tz3iAbkFwIaCJZuzScm/kFIc8/l79E1qlSjMoKko3dMrHCyS/b3CGo6PXuD+k3W1DM9z+A9fur9+7nBI8lqSf3fARv/N+Z6mkr+E2sBm+hh5cSpWCKXaauVy3Izgb0pGUmjjH27XAfabECAxtMs1j8Yh0TjoQvBJ7J+f1FLWHj+Y8m5lucqdPI7YjdRskPJ9zG6PXORPRStaFRguj6KFqjie3gXZ/BrsPgt82iVZZKQplNU6xh91C+SuPRb8AaQgJJLHX2/5X9HYQefkwhfS9nomDvzeOZc50="
    - secure: "Qsi5NsRGVZEjMf0m3pjKyyi82QoqguGNabFeV0QL58yYCVfrkeUhki/HRXKyb4+VVQ2SocwE6Wt/u1SvkJ7HP7qUf/tDC5JVhPH8c8Qul1W6HIXQOLuZ88QOGlM6KSbtDtkkcGem3dA0VP5bLE862IaX01ob4LTswMxtdy+DPQ9p2PQy+FPwxDDmmJPVPl8Hpcm9A+D8ofk4pK8cu5OhXGWqd5uR6kCcpBFuPK989zgWNgbFeA3t7nP9+TqvHiHwlDxJHqZMQtg9NBCd/byrusrg2TFqQ07j0vQ+Q1p6vqgswxPVrNJ/cYdhdBu7aXmJDNcs/RVW040ybwmbPAatf24pgN9ePhDZblRXfpgXr8yi+rjgUiHAjUhKzSBbiUIbC6SoJ70Bzx4zQ1UWf2g+ahYpB05afC3UZOYVKzOwzv4YFGG7ggUlno0SF/7if1mCMKerplWYjaiyiTXTwdvRMHM3kEM5lBUjJPaLjI238rZ4Ur3AZqEtQA2sZkYG1xLl69008ZNEQlVcMDCCwDhdYTV7NGneqh594R311OdbtZKik7EopRZUDw0YBsbLEZQ2TVBMDODPCVFiAD7Cpecki6PB+3rTmKjuHwhrcuv5pYfnpPetzh5hIIoD96DIh1UifqB53Q81EBAt6kgFp/IiEPonzCYV4e+vq2XLAZ67XoI="

#os:
#  - osx
dist: xenial

branches:
  only:
  - master

#todo: for multi-arch builds see: http://wiki.micromint.com/index.php/Debian_ARM_Cross-compile , https://wiki.debian.org/QemuUserEmulation , https://dev.to/zeerorg/build-multi-arch-docker-images-on-travis-5428
#  We can not use osx so because the docs currently state: "We do not currently support use of Docker on macOS"
#addons:
#  apt:
#    update: true
#    packages:
#    - qemu
#    - qemu-user-static
#    - binfmt-support
#    - dpkg-cross

# Publish to staging if successful (promotion to prod is a separate process)
env:
  - ARCH=amd64 HZN_EXCHANGE_URL=https://stg.edge-fabric.com/v1

# Install the hzn command
#todo: change this to:
#addons:
#  apt:
#    update: true
#    sources:
#    - sourceline: deb [arch=amd64,armhf,arm64,ppc64el] http://pkg.bluehorizon.network/linux/ubuntu xenial-updates main
#      key_url: 'http://pkg.bluehorizon.network/bluehorizon.network-public.key'
#    packages:
#    - horizon-cli
before_script:
  - wget -qO - http://pkg.bluehorizon.network/bluehorizon.network-public.key | sudo apt-key add -
  - echo "deb [arch=$(dpkg --print-architecture)] http://pkg.bluehorizon.network/linux/ubuntu xenial-testing main" | sudo tee -a /etc/apt/sources.list
  - sudo apt-get update -q
  - sudo apt-get install horizon-cli -y

# Build and test the example
# Note: tools/travis-find determines if the specified service was modified, so we know if we should test it.
script:
  - services=( edge/services/helloworld edge/services/cpu edge/services/gps edge/services/helloMMS edge/evtstreams/cpu2evtstreams edge/evtstreams/sdr2evtstreams )
  - |
    for service in "${services[@]}"; do
      if git diff --name-only $TRAVIS_COMMIT_RANGE | $TRAVIS_BUILD_DIR/tools/travis-find $service -v; then
        cd $TRAVIS_BUILD_DIR/$service && make test;
      fi
    done
  - cd $TRAVIS_BUILD_DIR

after_script: 
  - echo "Shhh... this is a secret! $MY_SECRET_ENV <-----"
  - echo "This should be another secret... $MY_SECRET <----"

# If this is after the PR has been merged into master, and the test was successful, then publish the example
#todo: publishing the service from travis is a problem, because we need the docker creds, horizon creds, and service private key. Even tho they are encrypted, the travis organization still has access to them.
#after_success:
#  - 'if [[ "$TRAVIS_PULL_REQUEST" == "false" ]] && git diff --name-only $TRAVIS_COMMIT_RANGE | $TRAVIS_BUILD_DIR/tools/travis-find edge/services/helloworld -v; then
#    echo "Publishing helloworld..." &&
#    echo "$DOCKER_HUB_PASS" | docker login -u "$DOCKER_HUB_USER" --password-stdin &&
#    cd $TRAVIS_BUILD_DIR/edge/services/helloworld && make publish-service;
#    fi'
