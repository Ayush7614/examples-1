sudo: true

language: minimal

os: linux 
arch: arm64 
dist: xenial

before_install:
  - apt-get update

services: docker-xenial

branches:
  only:
  - master

#todo: for multi-arch builds see: http://wiki.micromint.com/index.php/Debian_ARM_Cross-compile , https://wiki.debian.org/QemuUserEmulation , https://dev.to/zeerorg/build-multi-arch-docker-images-on-travis-5428
#  We can not use osx so because the docs currently state: "We do not currently support use of Docker on macOS"
addons:
  apt:
    update: true
    packages:
    - docker-ce
    - qemu
    - qemu-user-static
    - binfmt-support
    - dpkg-cross

# Publish to staging if successful (promotion to prod is a separate process)
env:
  - HZN_EXCHANGE_URL=https://stg.edge-fabric.com/v1

# Install the hzn command
addons:
  apt:
    update: true
    sources:
    - sourceline: deb [arch=amd64,armhf,arm64] http://pkg.bluehorizon.network/linux/ubuntu xenial-updates main
      key_url: 'http://pkg.bluehorizon.network/bluehorizon.network-public.key'
    packages:
    - horizon-cli

# Build and test the example services that were changed in the PR
# Note: tools/travis-find determines if the specified service was modified, so we know if we should test it.
script:
  # run qemu container for cross-compiling on arm 
#  - docker run --rm --privileged multiarch/qemu-user-static:register --reset
  - services=( edge/services/helloworld edge/services/cpu_percent edge/services/gps edge/services/sdr edge/services/helloMMS edge/evtstreams/cpu2evtstreams edge/evtstreams/sdr2evtstreams )
  - arches=( arm64 )
  - |
    for arch in "${arches[@]}"; do
      export ARCH=$arch
      echo $ARCH
      for service in "${services[@]}"; do
        if git diff --name-only $TRAVIS_COMMIT_RANGE | $TRAVIS_BUILD_DIR/tools/travis-find $service -v; then
          cd $TRAVIS_BUILD_DIR/$service && make test; 

          if [ $? -eq 0 ]; then
            passed=( "${passed[@]}" "$service" )
          fi
        fi
      done
    done
  - cd $TRAVIS_BUILD_DIR/edge/services/helloworld && make test
  - cd $TRAVIS_BUILD_DIR

# If this is after the PR has been merged into master, and the test was successful, then publish the example
#todo: publishing the service from travis is a problem, because we need the docker creds, horizon creds, and service private key. Even tho they are encrypted, the travis organization still has access to them.
#after_success:
  - |
    mkdir /home/travis/.hzn && mkdir /home/travis/.hzn/keys
    echo $PUBLIC_KEY | base64 -d > /home/travis/.hzn/keys/service.public.pem
    echo $PRIVATE_KEY | base64 -d > /home/travis/.hzn/keys/service.private.key
    echo "$DOCKER_HUB_PASS" | docker login -u "$DOCKER_HUB_USER" --password-stdin &&
    for service in "${passed[@]}"; do
      if [[ "$TRAVIS_PULL_REQUEST" == "false" ]] && git diff --name-only $TRAVIS_COMMIT_RANGE | $TRAVIS_BUILD_DIR/tools/travis-find $service -v; then
        echo "Publishing $service..." &&
        cd $TRAVIS_BUILD_DIR/$service && echo `pwd`;
      fi
    done
